{"name":"source.java","path":"source.java","content":{"structured":{"description":"A `PageInfo` class that represents information about a page of results from a data source. The class has fields for the current page number, page size, total pages, and total elements, as well as a constructor for creating instances of the class from a `Pageable` and a `Page`. Additionally, a static `of` method is provided to create a new `PageInfo` instance from a `Pageable` and a `Page`.","items":[{"id":"11711854-4fe4-228e-e443-4b2d42175b32","ancestors":[],"type":"function","description":"is a data structure that represents information about a page of results from a query. It contains the current page being displayed, the maximum number of pages allowed, and the total number of pages and elements in the result set. The class also provides a method for creating a new instance of the class based on a pageable object and a page of results.","name":"PageInfo","code":"@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}","location":{"start":12,"insert":12,"offset":" ","indent":0,"comment":null},"item_type":"class","length":18,"docLength":null,"doc":"A `PageInfo` class that represents information about a page of results from a data source. The class has fields for the current page number, page size, total pages, and total elements, as well as a constructor for creating instances of the class from a `Pageable` and a `Page`. Additionally, a static `of` method is provided to create a new `PageInfo` instance from a `Pageable` and a `Page`."},{"id":"1ab64c49-3715-e8a8-f542-77685398c1f4","ancestors":["11711854-4fe4-228e-e443-4b2d42175b32"],"type":"function","description":"generates a `PageInfo` object containing information about a given pageable and page, such as the page number, size, total pages, and total elements.","params":[{"name":"pageable","type_name":"Pageable","description":"pageable object that contains information about the current page being processed, including the page number and the total number of pages in the result set.\n\n* The `getPageNumber()` method returns the page number of the current page being processed.\n* The `getPageSize()` method returns the size of a single page of data in the collection being processed.\n* The `getTotalPages()` method returns the total number of pages in the collection being processed.\n* The `getTotalElements()` method returns the total number of elements in the collection being processed.","complex_type":true},{"name":"page","type_name":"Page<?>","description":"current page being processed, providing information on its position within the total number of pages and the number of elements it contains.\n\n* `pageNumber`: The page number of the result, which can be retrieved from the `Pageable` object passed as an argument.\n* `pageSize`: The size of each page in the result, also obtained from the `Pageable` object.\n* `totalPages`: The total number of pages in the result, calculated by multiplying the `pageSize` by the `pageable.getPageCount()` (or `pageable.getTotalPages()`).\n* `totalElements`: The total number of elements in the result, which can be derived from the `pageable.getTotalElements()` (or `page.getTotalElements()`) and the `pageSize`.","complex_type":true}],"returns":{"type_name":"PageInfo","description":"a `PageInfo` object containing information about the page number, size, total pages, and total elements of a given pageable and page.\n\n* The first element is pageNumber, which represents the number of the current page being displayed.\n* pageSize represents the total number of elements that can be displayed on one page.\n* TotalPages represents the total number of pages in the dataset.\n* TotalElements represents the total number of elements in the dataset.","complex_type":true},"name":"of","code":"public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }","location":{"start":21,"insert":21,"offset":" ","indent":2,"comment":null},"item_type":"method","length":8,"docLength":null,"doc":"A `PageInfo` class that represents information about a page of results from a data source. The class has fields for the current page number, page size, total pages, and total elements, as well as a constructor for creating instances of the class from a `Pageable` and a `Page`. Additionally, a static `of` method is provided to create a new `PageInfo` instance from a `Pageable` and a `Page`."}]}}}